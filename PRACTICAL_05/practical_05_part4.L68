00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 11/02/2025 10:42:16

00001000                             1      ORG    $1000
00001000                             2      
00001000                             3      ; D0 used for TRAP codes
00001000                             4      ; D1 used for Player's Health
00001000                             5      ; D2 used for Enemy Position
00001000                             6      ; D4 used for ENEMY count
00001000                             7      ; A0 used for counting enemies
00001000                             8      ; A1 used for progress messages
00001000                             9      ; A2 used for PLAYER_X
00001000                            10      ; A3 used for ENEMY_POSITIONS
00001000                            11      
00001000  =0000000A                 12  DAMAGE      EQU 10              ; Damage when Collisions occur
00001000                            13  
00001000                            14  START:
00001000  45F9 000010C0             15      LEA     PLAYER_X, A2        ; Player will move along X axis
00001006  47F9 000010FE             16      LEA     ENEMY_POSITIONS, A3 ; Enemy positions or spawn points
0000100C  6000 0002                 17      BRA     GAME_LOOP
00001010                            18      
00001010                            19  GAME_LOOP:
00001010  6100 008C                 20      BSR     COUNT_ENEMIES       ; Size of the ENEMY_POSITIONS Array
00001014  1800                      21      MOVE.B  D0, D4              ; Reset Enemy count Gameloop Message
00001016                            22      
00001016  43F9 000010CF             23      LEA     MSG_GAMELOOP, A1    ; Load and Draw Gameloop Message
0000101C  6100 0038                 24      BSR     DRAW
00001020                            25      
00001020  6100 0004                 26      BSR     UPDATE              ; Call UPDATE
00001024  60EA                      27      BRA     GAME_LOOP           ; Call GAME_LOOP
00001026                            28      
00001026                            29  UPDATE:
00001026                            30  
00001026  1239 000010C4             31      MOVE.B  PLAYER_HEALTH, D1   ; Move Player Health into D1
0000102C                            32      
0000102C  43F9 000010C5             33      LEA     MSG_HEALTH, A1      ; Load and Draw Health Message
00001032  6100 0022                 34      BSR     DRAW
00001036                            35      
00001036  103C 0003                 36      MOVE.B  #3, D0              ; Display signed number in D1.L in deciaml in smallest field
0000103A  4E4F                      37      TRAP    #15
0000103C                            38      
0000103C  43F9 000010FB             39      LEA     CRLF, A1            ; Load and Carriae Return and Line Feed (Newline)
00001042  6100 0012                 40      BSR     DRAW
00001046                            41      
00001046  B27C 0000                 42      CMP     #0, D1              ; Check if Health is 0
0000104A  6F00 0068                 43      BLE     GAME_OVER           ; Game Over
0000104E  5292                      44      ADD.L   #1, (A2)            ; Change X position of Player
00001050  6100 000E                 45      BSR     COLLISION           ; Check for Collisions with ENEMIES
00001054  4E75                      46      RTS
00001056                            47  
00001056                            48  DRAW:
00001056  1A3C 0001                 49      MOVE.B  #1, D5
0000105A  47F9 000010FE             50      LEA     ENEMY_POSITIONS, A3
00001060                            51  
00001060                            52  COLLISION:
00001060  1A3C 0001                 53      MOVE.B  #1, D5              ; Loop through Array
00001064  47F9 000010FE             54      LEA     ENEMY_POSITIONS, A3 ; Load ENEMY_POSITIONS Array
0000106A                            55      
0000106A                            56  ITERATE:
0000106A  B845                      57      CMP     D5, D4              ; Counter for ENEMY_POSITIONS
0000106C  5205                      58      ADD.B   #1, D5              ; Subtract one
0000106E  67A0                      59      BEQ     GAME_LOOP           ; If 0 goto GAME_LOOP
00001070  6600 0004                 60      BNE     CHECK_ENEMIES       ; If not 0, Check for Enemy Collisions
00001074  4E75                      61      RTS
00001076                            62  
00001076                            63  CHECK_ENEMIES:
00001076  241B                      64      MOVE.L  (A3)+, D2           ; Move ENEMIES position to D2
00001078  2612                      65      MOVE.L  (A2), D3            ; Move Player position to D3
0000107A                            66      
0000107A  B682                      67      CMP.L   D2, D3              ; Compare Player and Enemy position
0000107C  6700 0004                 68      BEQ     REDUCE_HEALTH       ; If Equal reduce Health
00001080  66E8                      69      BNE     ITERATE             ; Iterate to next Enemy
00001082                            70      
00001082                            71  REDUCE_HEALTH:
00001082  43F9 000010D9             72      LEA     MSG_COLLISION, A1   ; Load and Draw Collision Message
00001088  61CC                      73      BSR     DRAW
0000108A                            74      
0000108A  0439 000A 000010C4        75      SUB.B   #DAMAGE, PLAYER_HEALTH
00001092                            76      
00001092  43F9 000010ED             77      LEA     MSG_DAMAGE, A1      ; Load and Draw Damage Message
00001098  61BC                      78      BSR     DRAW
0000109A                            79      
0000109A  6000 FF74                 80      BRA     GAME_LOOP
0000109E                            81      
0000109E                            82  COUNT_ENEMIES:
0000109E  103C 0000                 83      MOVE.B  #0, D0              ; Initialize counter to 0
000010A2  41F9 000010FE             84      LEA     ENEMY_POSITIONS, A0 ; Load the address of the array into A0
000010A8                            85      
000010A8                            86  COUNT_ENEMIES_LOOP:
000010A8  4A98                      87      TST.L   (A0)+               ; Test the byte at the address in A0 (Check if 0) and increment A0
000010AA  6700 0006                 88      BEQ     END_COUNTING        ; If the bye is zero, it's the end of the array
000010AE                            89      
000010AE  5200                      90      ADD.B   #1, D0              ; Increment the counter
000010B0  60F6                      91      BRA     COUNT_ENEMIES_LOOP  ; Repeat the loop
000010B2                            92      
000010B2                            93  END_COUNTING:
000010B2  4E75                      94      RTS
000010B4                            95  
000010B4                            96  GAME_OVER:
000010B4  43F9 000010E3             97      LEA     MSG_GAMEOVER, A1
000010BA  619A                      98      BSR     DRAW
000010BC                            99  
000010BC  FFFF FFFF                100      SIMHALT
000010C0                           101  
000010C0= 00000001                 102  PLAYER_X        DC.L    1
000010C4= 64                       103  PLAYER_HEALTH   DC.B    100
000010C5= 48 65 61 6C 74 68 ...    104  MSG_HEALTH      DC.B    'Health : ', 0
000010CF= 47 61 6D 65 20 4C ...    105  MSG_GAMELOOP    DC.B    'Game Loop', 0
000010D9= 43 6F 6C 6C 69 73 ...    106  MSG_COLLISION   DC.B    'Collision', 0
000010E3= 47 61 6D 65 20 4F ...    107  MSG_GAMEOVER    DC.B    'Game Over', 0
000010ED= 54 61 6B 69 6E 67 ...    108  MSG_DAMAGE      DC.B    'Taking Damage', 0
000010FB= 0D 0A 00                 109  CRLF            DC.B    $0D, $0A, 0
000010FE= 00000014 0000001E ...    110  ENEMY_POSITIONS DC.L    20, 30, 40, 50, 60, 70, 80, 90, 200, 300, 500, 0
0000112E                           111  
0000112E                           112      END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CHECK_ENEMIES       1076
COLLISION           1060
COUNT_ENEMIES       109E
COUNT_ENEMIES_LOOP  10A8
CRLF                10FB
DAMAGE              A
DRAW                1056
END_COUNTING        10B2
ENEMY_POSITIONS     10FE
GAME_LOOP           1010
GAME_OVER           10B4
ITERATE             106A
MSG_COLLISION       10D9
MSG_DAMAGE          10ED
MSG_GAMELOOP        10CF
MSG_GAMEOVER        10E3
MSG_HEALTH          10C5
PLAYER_HEALTH       10C4
PLAYER_X            10C0
REDUCE_HEALTH       1082
START               1000
UPDATE              1026
